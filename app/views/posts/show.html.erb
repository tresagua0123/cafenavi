<div class="row">

<div class="col-sm-7">

<div class="text-center">
<h3 class="font-weight-bold"> <%= @post.title %></h3></div>




<p><%= @post.user.name  %>
<%= (icon 'fas','coffee')  %><%= @post.user.posts.count  %>杯目さんのレビュー</p>

<div class="balloon1">

<div class="icon">
<% if @post.user.avatar.attached? %>

       <%= link_to (image_tag @post.user.avatar.variant(resize:'200x200').processed, :size =>'80x80'), user_path(@post.user), class:"card-img-top rounded-circle" %>

    <% else %>
     <%= link_to (image_tag 'cover.jpg', :size =>'80x80'), user_path(@post.user), class:"card-img-top" %>
    <% end %>
</div>


<%= @post.description %>


</div>



<p class="pt-4">いいね件数: <%= @post.likes.count  %></p>
<% if current_user.already_liked?(@post) %>
<%= button_to 'いいねを取り消す', post_like_path(@post), method: :delete, class:"btn btn-sm btn-secondary"  %>
<% else %>
<%= button_to 'いいね', post_likes_path(@post), class:"btn btn-sm btn-secondary"  %>
<% end %>
<p>いいねしたユーザー: 
<% @post.liked_users.each do |user| %>
<%= user.name  %> |
<% end %>
</p>

<% if @post.prefecture %>
<div class="btn btn-info">
<%= @post.prefecture.name %>
</div>

<% end %>

<% @post.tag_ids.each do |tag|%> 
<% tag %>
<% tags = Tag.find [tag]%>
<div class="btn btn-success">
<%= tags[0].name %>
</div>
<% end %>



<% if @post.image.attached? %>
       <%= image_tag @post.image.variant(resize:'200x200').processed, :size =>'80x300', class:"card-img-top mt-2" %>
    <% else %>
     <%= link_to (image_tag 'story.jpg', :size =>'80x300', class: "card-img-top mt-2"), post_path(@post) %>
    <% end %>
<br>
<!-- 地名入力用のinputを追加 -->
<!-- <input id="address" type="textbox" value="<%= @post.address %>"> -->
<!-- 
<p>住所：
<input id="address" type="textbox" value="<%= @post.address %>" class="text-secondary" disabled>
</p>
-->

住所: <%= @post.address  %>
<div id='map' class="mt-2">
</div>


<!-- buttonをクリックしたらcodeAddressを実行　-->


<style>
#map{
  height: 300px;
}
</style>

<script>
/*
mapを関数の外で定義(codeAddressでも使うため)
geocoderを用意
*/

/*
let map
let geocoder

function initMap(){
  // geocoderを初期化
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: <%= @post.latitude %>, lng:<%= @post.longitude %> },
  zoom: 8
  });
}
*/

window.onload = function(){
  // 入力を取得
  //let inputAddress = document.getElementById('address').value;
  let inputAddress = "<%= @post.address %>";
  let map
  let geocoder

  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: <%= @post.latitude %>, lng:<%= @post.longitude %> },
  zoom: 8
  });

  

  // geocodingしたあとmapを移動
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
　　　　　　　　　　　　// map.setCenterで地図が移動
      map.setCenter(results[0].geometry.location);

　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}
/*
let inputAddress = document.getElementById('address').value;
window.onload = codeAddress;

function codeAddress(){
  // 入力を取得
  // let inputAddress = document.getElementById('address').value;
  

  // geocodingしたあとmapを移動
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
　　　　　　　　　　　　// map.setCenterで地図が移動
      map.setCenter(results[0].geometry.location);

　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}
*/


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GMAP_API_KEY'] %>&callback=initMap" async defer></script>






<%= link_to "ホームへ戻る", posts_path, class:"btn btn-secondary mt-2"  %>




<% if current_user == @post.user %>
<%= link_to "投稿を削除", @post, method: :delete, class:"btn btn-secondary mt-2" %>
<% end %>

</div>



<div class="col-sm-5 pt-3">

<% if @post.comments.any? %>
<ul>
<% @post.comments.each do |comment| %>
<li>

<% if comment.name? %>
  <%= comment.name %>:
  <%= comment.content %>
<% else %>
  <%= comment.post.user.name %>:
<%= comment.content %>
<% end %>


</li>
<% end %>
</ul>

<% end %>



<h5 class="text-center">コメントを追加</h5>
<div class="border ">


<%= form_for([@post, @post.comments.build]) do |f| %>

<div class="form-group">

</div>
<p>ユーザー名</p>
<%= f.text_field :name, class:"form-control", placeholder: (current_user.name)%>
<div class="form-group">

<p>コメント</p>
<%= f.text_area :content, class:"form-control" %>
</div>

<div class="text-center">
<%= f.submit nil, class:"btn btn-primary"%></div>

<% end %>
</div>







</div>

</div>